% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GDSArray-classes.R
\docType{class}
\name{extract_array}
\alias{extract_array}
\alias{extract_array,GDSArraySeed-method}
\alias{GDSArray-class}
\alias{matrixClass,GDSArray-method}
\alias{GDSMatrix}
\alias{GDSMatrix-class}
\alias{coerce}
\alias{coerce,GDSArray,GDSMatrix-method}
\alias{coerce,GDSMatrix,GDSArray-method}
\alias{coerce,ANY,GDSMatrix-method}
\alias{GDSArray}
\alias{GDSArray-method}
\alias{example}
\alias{GDSArray-data}
\title{GDSArray constructor and coercion methods.}
\usage{
\S4method{extract_array}{GDSArraySeed}(x, index)

GDSArray(file, name = NA)

example(pkg = "GDSArray")
}
\arguments{
\item{x}{the GDSArraySeed object}

\item{index}{An unnamed list of subscripts as positive integer
vectors, one vector per dimension in \code{x}. Empty and
missing subscripts (represented by \code{integer(0)} and
\code{NULL} list elements, respectively) are allowed. The
subscripts can contain duplicated indices. They cannot contain
NAs or non-positive values.}

\item{file}{the gds file name.}

\item{name}{the gds array node to be read into GDSArraySeed / GDSArray. For
\code{GDSArray}, the default value for \code{name} is the
genotype data.}

\item{pkg}{the package name, which is "GDSArray" by default.}
}
\value{
\code{GDSArray} class object.
}
\description{
\code{extract_array}: the function to extract data from
    a \code{GDS} file, by taking \code{GDSArraySeed} as input. This
    function is required by the \code{DelayedArray} for the seed
    contract.

\code{GDSArray}: The function to convert a gds file
    into the GDSArray data structure.

\code{GDSArray} example data
}
\examples{
file <- SNPRelate::snpgdsExampleFileName()
allnodes <- gdsnodes(file)  ## print all available gds nodes in file.
allnodes
## GDSArray(file) #> deactivate temporarily 3/4/20
GDSArray(file, "sample.annot/pop.group")

file1 <- SeqArray::seqExampleFileName("gds")
allnodes1 <- gdsnodes(file1)  ## print all available gds nodes in file1. 
allnodes1
## GDSArray(file1) #> deactivate temporarily 3/4/20
GDSArray(file1, "variant.id")
GDSArray(file1, "sample.annotation/family")
GDSArray(file1, "annotation/format/DP")
GDSArray(file1, "annotation/info/DP")
example("GDSArray")

}
